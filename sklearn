from sklearn.ensemble import IsolationForest
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import make_scorer, f1_score
import numpy as np

# Example data
X = ...  # Features
y = ...  # Labels: 1 for normal, -1 for anomalies

# Custom scoring
def anomaly_f1(estimator, X, y):
    preds = estimator.predict(X)
    return f1_score(y, preds, pos_label=-1)

param_grid = {
    'n_estimators': [50, 100, 200],
    'max_samples': ['auto', 256, 512],
    'max_features': [0.5, 1.0],
    'contamination': [0.01, 0.05, 0.1],
}

grid = GridSearchCV(
    IsolationForest(random_state=42),
    param_grid,
    scoring=make_scorer(anomaly_f1),
    cv=3,
    verbose=1,
    n_jobs=-1
)

grid.fit(X, y)
print("Best Params:", grid.best_params_)
